name: Deploy Documentation

on:
  # main ブランチにプッシュされたときに実行
  push:
    branches:
      - main
  # 手動実行も可能にする (オプション)
  workflow_dispatch:

# 同時実行制御 (オプション)
concurrency:
  group: "pages"
  cancel-in-progress: true

# ジョブの定義
jobs:
  deploy-documentation:
    name: Build and Deploy Documentation
    runs-on: macos-latest # DocCのビルドにはmacOS環境が必要

    # リポジトリへの書き込み権限を付与
    permissions:
      contents: read
      pages: write # GitHub Pages へのデプロイに必要
      id-token: write # GitHub Pages へのデプロイに必要 (OIDC)

    steps:
      # 1. リポジトリのコードをチェックアウト
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Swift環境をセットアップ (Xcodeのバージョンを指定すると安定する場合あり)
      - name: Check /Applications directory content
        run: ls -l /Applications # Xcodeのバージョンを確認
      - name: Select Xcode        
        run: sudo xcode-select -s /Applications/Xcode_16.2.app # 必要に応じてXcodeのバージョンを調整
      # - name: Setup Swift Environment
      #   uses: swift-actions/setup-swift@v2 # 最新版を使うのが良い
      #   with: 
      #     swift-version: "6.1.0"

      # 3. ドキュメントをビルドし、静的サイトとして生成
      - name: Generate Documentation for Static Hosting
        run: |
          swift package --allow-writing-to-directory ./docs \
            generate-documentation --target ObservableUIKit \
            --disable-indexing \
            --transform-for-static-hosting \
            --hosting-base-path ObservableUIKit \
            --output-path ./docs
        # --target: あなたのライブラリターゲット名を指定 (例: ObservableUIKit)
        # --disable-indexing: GitHub Pagesでは検索インデックスが不要な場合が多い
        # --transform-for-static-hosting: 静的ホスティング用に変換
        # --hosting-base-path: GitHub PagesのURLが https://<username>.github.io/<repository-name>/ の場合、リポジトリ名を指定
        # --output-path: 生成されたWebサイトファイルが出力される場所

      # 4. GitHub Pages アーティファクトをアップロード
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs # 上記で指定した output-path

      # 5. GitHub Pages へデプロイ
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # 最新のアクションを使う
        # このアクションが `pages: write` と `id-token: write` 権限を利用する