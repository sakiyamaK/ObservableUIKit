{"metadata":{"categoryPathComponent":"Tutorial-Table-of-Contents","role":"project","category":"tutorial","title":"ObservationUIKit"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"text":"ObservationをUIKitでシンプルに扱えるようにするライブラリのチュートリアルです","type":"text"}]}],"chapter":"データの用意からViewの監視まで","estimatedTimeInMinutes":10,"backgroundImage":"demo.png","kind":"hero","title":"ObservationUIKit","image":"demo.png"},{"tasks":[{"title":"データの用意からViewの監視まで","contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"データの用意からViewの監視まで"}],"type":"paragraph"}],"mediaPosition":"trailing"}],"stepsSection":[{"runtimePreview":null,"media":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"監視対象となるデータをObservableで用意します"}],"type":"paragraph"}],"caption":[],"code":"step1.swift"},{"runtimePreview":null,"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"TestDataとプリミティブなbool値をもつViewControllerを用意します"}]}],"caption":[],"code":"step2.swift"},{"runtimePreview":null,"media":null,"type":"step","content":[{"inlineContent":[{"text":"TestDataとプリミティブなbool値を監視してViewを更新させます","type":"text"}],"type":"paragraph"}],"caption":[],"code":"step3.swift"}],"anchor":"データの用意からViewの監視まで"}],"kind":"tasks"}],"variants":[{"paths":["\/tutorials\/observableuikit\/chapter1"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","hierarchy":{"paths":[["doc:\/\/observableuikit.ObservableUIKit\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/observableuikit.ObservableUIKit\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/observableuikit.ObservableUIKit\/tutorials\/Tutorial-Table-of-Contents\/--------View-----"]],"modules":[{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/observableuikit.ObservableUIKit\/tutorials\/ObservableUIKit\/Chapter1#%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E7%94%A8%E6%84%8F%E3%81%8B%E3%82%89View%E3%81%AE%E7%9B%A3%E8%A6%96%E3%81%BE%E3%81%A7"}],"reference":"doc:\/\/observableuikit.ObservableUIKit\/tutorials\/ObservableUIKit\/Chapter1"}],"reference":"doc:\/\/observableuikit.ObservableUIKit\/tutorials\/Tutorial-Table-of-Contents\/--------View-----"}],"reference":"doc:\/\/observableuikit.ObservableUIKit\/tutorials\/Tutorial-Table-of-Contents"},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/observableuikit.ObservableUIKit\/tutorials\/ObservableUIKit\/Chapter1"},"references":{"doc://observableuikit.ObservableUIKit/tutorials/ObservableUIKit/Chapter1":{"title":"ObservationUIKit","abstract":[{"type":"text","text":"ObservationをUIKitでシンプルに扱えるようにするライブラリのチュートリアルです"}],"estimatedTime":"10min","url":"\/tutorials\/observableuikit\/chapter1","type":"topic","kind":"project","identifier":"doc:\/\/observableuikit.ObservableUIKit\/tutorials\/ObservableUIKit\/Chapter1","role":"project"},"step3.swift":{"highlights":[{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76},{"line":77},{"line":78},{"line":79},{"line":80},{"line":81},{"line":82}],"fileName":"ViewController.swift","identifier":"step3.swift","content":["import UIKit","import ObservableUIKit","","final class ViewController: UIViewController {","","    \/\/ 監視対象のデータ","    private var testData: TestData","    \/\/ 監視対象のプリミティブ型","    @UIKitState private var isLoading: Bool = true","","    init(testData: TestData = TestData()) {","        self.testData = testData","        super.init(nibName: nil, bundle: nil)","    }","","    private let testView: UIView = {","        let view = UIView(frame: .zero)","        view.translatesAutoresizingMaskIntoConstraints = false","        return view","    }()","","    private let testLabel: UILabel = {","        let label = UILabel(frame: .zero)","        label.translatesAutoresizingMaskIntoConstraints = false","        return label","    }()","","    private let indicator: UIActivityIndicatorView = {","        let view = UIActivityIndicatorView(frame: .zero)","        view.translatesAutoresizingMaskIntoConstraints = false","        view.startAnimating()","        return view","    }()","","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","","    override func viewDidLoad() {","        super.viewDidLoad()","        \/\/ Viewをaddsubviewしておきます","","        \/*","         ここから追記","         *\/","","        \/\/ UIViewの各パラメータを監視します","        testView.tracking {[weak self] in","            self?.testData.cornerRadius","        } onChange: { view, cornerRadius in","            view.layer.cornerRadius = cornerRadius","        }.tracking {[weak self] in","            self?.testData.rotate","        } onChange: { view, angle in","            view.transform = .init(rotationAngle: angle)","        }.trackingOptional {[weak self] in","            self?.testData.color","        } onChange: { view, color in","            view.backgroundColor = color","        }","","        \/\/ UILabelの各パラメータを監視","        testLabel.tracking {[weak self] in","            self?.testData.title ?? \"default\"","        } onChange: { label, title in","            label.text = title","        }.tracking {[weak self] in","            self?.testData.color","        } onChange: { label, textColor in","            label.textColor = textColor","        }","","        \/\/ UIActivityIndicatorのパラメータを監視","        indicator.tracking {[weak self] in","            self!.isLoading","        } onChange: { indicator, loading in","            if loading {","                indicator.startAnimating()","            } else {","                indicator.stopAnimating()","            }","        }","    }","}"],"type":"file","fileType":"swift","syntax":"swift"},"doc://observableuikit.ObservableUIKit/tutorials/Tutorial-Table-of-Contents/--------View-----":{"type":"topic","title":"データの用意からViewの監視まで","url":"\/tutorials\/tutorial-table-of-contents\/--------view-----","kind":"article","abstract":[],"identifier":"doc:\/\/observableuikit.ObservableUIKit\/tutorials\/Tutorial-Table-of-Contents\/--------View-----","role":"article"},"step2.swift":{"fileType":"swift","type":"file","highlights":[],"content":["import UIKit","import ObservableUIKit","","final class ViewController: UIViewController {","","    \/\/ 監視対象のデータ","    private var testData: TestData","    \/\/ 監視対象のプリミティブ型","    @UIKitState private var isLoading: Bool = true","","    init(testData: TestData = TestData()) {","        self.testData = testData","        super.init(nibName: nil, bundle: nil)","    }","","    private let testView: UIView = {","        let view = UIView(frame: .zero)","        view.translatesAutoresizingMaskIntoConstraints = false","        return view","    }()","","    private let testLabel: UILabel = {","        let label = UILabel(frame: .zero)","        label.translatesAutoresizingMaskIntoConstraints = false","        return label","    }()","","    private let indicator: UIActivityIndicatorView = {","        let view = UIActivityIndicatorView(frame: .zero)","        view.translatesAutoresizingMaskIntoConstraints = false","        view.startAnimating()","        return view","    }()","","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","","    override func viewDidLoad() {","        super.viewDidLoad()","        \/\/ Viewをaddsubviewしておきます        ","    }","}"],"syntax":"swift","fileName":"ViewController.swift","identifier":"step2.swift"},"demo.png":{"type":"image","identifier":"demo.png","alt":"demo","variants":[{"traits":["1x","light"],"url":"\/images\/observableuikit.ObservableUIKit\/demo.png"}]},"doc://observableuikit.ObservableUIKit/tutorials/Tutorial-Table-of-Contents":{"type":"topic","kind":"overview","url":"\/tutorials\/tutorial-table-of-contents","title":"Tutorial of ObservableUIKit","abstract":[{"text":"ObservationをUIKitでシンプルに扱えるようにするライブラリのチュートリアルです","type":"text"}],"role":"overview","identifier":"doc:\/\/observableuikit.ObservableUIKit\/tutorials\/Tutorial-Table-of-Contents"},"step1.swift":{"fileType":"swift","type":"file","highlights":[],"content":["import UIKit","","\/\/ 監視対象のデータ","@Observable","final class TestData {","    var color: UIColor = .green","    var rotate: CGFloat = 0","    var cornerRadius: CGFloat = 0","    var title: String?","}"],"syntax":"swift","fileName":"TestData.swift","identifier":"step1.swift"},"doc://observableuikit.ObservableUIKit/tutorials/ObservableUIKit/Chapter1#%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E7%94%A8%E6%84%8F%E3%81%8B%E3%82%89View%E3%81%AE%E7%9B%A3%E8%A6%96%E3%81%BE%E3%81%A7":{"identifier":"doc:\/\/observableuikit.ObservableUIKit\/tutorials\/ObservableUIKit\/Chapter1#%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E7%94%A8%E6%84%8F%E3%81%8B%E3%82%89View%E3%81%AE%E7%9B%A3%E8%A6%96%E3%81%BE%E3%81%A7","abstract":[{"type":"text","text":"ObservationをUIKitでシンプルに扱えるようにするライブラリのチュートリアルです"}],"url":"\/tutorials\/observableuikit\/chapter1#%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E7%94%A8%E6%84%8F%E3%81%8B%E3%82%89View%E3%81%AE%E7%9B%A3%E8%A6%96%E3%81%BE%E3%81%A7","role":"pseudoSymbol","kind":"section","type":"section","title":"データの用意からViewの監視まで"}}}